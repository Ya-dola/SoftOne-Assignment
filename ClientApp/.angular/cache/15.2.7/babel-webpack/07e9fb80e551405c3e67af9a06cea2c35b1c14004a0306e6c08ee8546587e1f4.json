{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class StudentPipe {\n  transform(students) {\n    return students.filter(student => {\n      return student.firstName.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >= 0 || student.lastName.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >= 0 || student.mobile.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >= 0 || student.email.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >= 0 || student.nic.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >= 0;\n    });\n  }\n}\nStudentPipe.ɵfac = function StudentPipe_Factory(t) {\n  return new (t || StudentPipe)();\n};\nStudentPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"student\",\n  type: StudentPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAGtBC,SAAS,CAACC,QAAmB;IAC3B,OAAOA,QAAQ,CAACC,MAAM,CAAEC,OAAgB,IAAI;MAC1C,OACEA,OAAO,CAACC,SAAS,CACdC,WAAW,EAAE,CACbC,OAAO,CAAC,IAAI,CAACC,UAAU,CAACF,WAAW,EAAE,CAAC,IAAI,CAAC,IAC9CF,OAAO,CAACK,QAAQ,CAACH,WAAW,EAAE,CAACC,OAAO,CAAC,IAAI,CAACC,UAAU,CAACF,WAAW,EAAE,CAAC,IACnE,CAAC,IACHF,OAAO,CAACM,MAAM,CAACJ,WAAW,EAAE,CAACC,OAAO,CAAC,IAAI,CAACC,UAAU,CAACF,WAAW,EAAE,CAAC,IACjE,CAAC,IACHF,OAAO,CAACO,KAAK,CAACL,WAAW,EAAE,CAACC,OAAO,CAAC,IAAI,CAACC,UAAU,CAACF,WAAW,EAAE,CAAC,IAChE,CAAC,IACHF,OAAO,CAACQ,GAAG,CAACN,WAAW,EAAE,CAACC,OAAO,CAAC,IAAI,CAACC,UAAU,CAACF,WAAW,EAAE,CAAC,IAAI,CAAC;IAEzE,CAAC,CAAC;EACJ;;AAlBWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;;QAAXA,WAAW;EAAAa;AAAA","names":["StudentPipe","transform","students","filter","student","firstName","toLowerCase","indexOf","searchTerm","lastName","mobile","email","nic","pure"],"sourceRoot":"","sources":["L:\\Workspaces\\Web Dev\\Angular\\SoftOne-Assignment\\ClientApp\\src\\app\\student.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Student } from './student';\n\n@Pipe({\n  name: 'student',\n})\nexport class StudentPipe implements PipeTransform {\n  private searchTerm: any;\n\n  transform(students: Student[]): Student[] {\n    return students.filter((student: Student) => {\n      return (\n        student.firstName\n          .toLowerCase()\n          .indexOf(this.searchTerm.toLowerCase()) >= 0 ||\n        student.lastName.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >=\n          0 ||\n        student.mobile.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >=\n          0 ||\n        student.email.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >=\n          0 ||\n        student.nic.toLowerCase().indexOf(this.searchTerm.toLowerCase()) >= 0\n      );\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}